!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CFLAGS	Makefile	/^CFLAGS = -Wall -O3 -DPLATFORM_LINUX -DTINYXML_CFG -I\/usr\/local\/include$/;"	m
CXX	Makefile	/^CXX = g++$/;"	m
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f	access:public
FindNearest	.ycm_extra_conf.py	/^def FindNearest(path, target):$/;"	f	access:public
FlagsForClangComplete	.ycm_extra_conf.py	/^def FlagsForClangComplete(root):$/;"	f	access:public
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f	access:public
FlagsForInclude	.ycm_extra_conf.py	/^def FlagsForInclude(root):$/;"	f	access:public
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f	access:public
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f	access:public
LDFLAGS	Makefile	/^LDFLAGS = -lpthread$/;"	m
MakeRelativePathsInFlagsAbsolute	.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f	access:public
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
database	.ycm_extra_conf.py	/^  database = None$/;"	v
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
main	ca.cpp	/^int main()$/;"	f	signature:()
main	cv.cpp	/^int main()$/;"	f	signature:()
mouseEvent	ca.cpp	/^void mouseEvent(int event, int x, int y, int flags, void *param)$/;"	f	signature:(int event, int x, int y, int flags, void *param)
mouseEvent	cv.cpp	/^void mouseEvent(int event, int x, int y, int flags, void *param)$/;"	f	signature:(int event, int x, int y, int flags, void *param)
mousePosition	ca.cpp	/^CvPoint mousePosition = cvPoint(winWidth >> 1, winHeight >> 1);$/;"	v
mousePosition	cv.cpp	/^CvPoint mousePosition = cvPoint(winWidth >> 1, winHeight >> 1);$/;"	v
winHeight	ca.cpp	/^const int winHeight = 600;$/;"	v
winHeight	cv.cpp	/^const int winHeight = 600;$/;"	v
winWidth	ca.cpp	/^const int winWidth = 800;$/;"	v
winWidth	cv.cpp	/^const int winWidth = 800;$/;"	v
